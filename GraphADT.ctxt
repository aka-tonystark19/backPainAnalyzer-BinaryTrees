#BlueJ class context
comment0.target=GraphADT
comment0.text=\r\n\ GraphADT\ defines\ the\ interface\ to\ a\ graph\ data\ structure.\r\n\r\n\ @author\ Java\ Foundations\r\n\ @version\ 4.0\r\n
comment1.params=vertex
comment1.target=void\ addVertex(java.lang.Object)
comment1.text=\ \r\n\ Adds\ a\ vertex\ to\ this\ graph,\ associating\ object\ with\ vertex.\ \r\n\ \r\n\ @param\ vertex\ the\ vertex\ to\ be\ added\ to\ this\ graph\r\n
comment10.params=
comment10.target=int\ size()
comment10.text=\ \r\n\ Returns\ the\ number\ of\ vertices\ in\ this\ graph.\ \r\n\r\n\ @return\ the\ integer\ number\ of\ vertices\ in\ this\ graph\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ \r\n\ Returns\ a\ string\ representation\ of\ the\ adjacency\ matrix.\ \r\n\r\n\ @return\ a\ string\ representation\ of\ the\ adjacency\ matrix\r\n
comment2.params=vertex
comment2.target=void\ removeVertex(java.lang.Object)
comment2.text=\ \r\n\ Removes\ a\ single\ vertex\ with\ the\ given\ value\ from\ this\ graph.\ \r\n\ \r\n\ @param\ vertex\ the\ vertex\ to\ be\ removed\ from\ this\ graph\r\n
comment3.params=vertex1\ vertex2
comment3.target=void\ addEdge(java.lang.Object,\ java.lang.Object)
comment3.text=\ \r\n\ Inserts\ an\ edge\ between\ two\ vertices\ of\ this\ graph.\ \r\n\r\n\ @param\ vertex1\ the\ first\ vertex\r\n\ @param\ vertex2\ the\ second\ vertex\r\n
comment4.params=vertex1\ vertex2
comment4.target=void\ removeEdge(java.lang.Object,\ java.lang.Object)
comment4.text=\ \r\n\ Removes\ an\ edge\ between\ two\ vertices\ of\ this\ graph.\ \r\n\r\n\ @param\ vertex1\ the\ first\ vertex\r\n\ @param\ vertex2\ the\ second\ vertex\r\n
comment5.params=startVertex
comment5.target=java.util.Iterator\ iteratorBFS(java.lang.Object)
comment5.text=\ \r\n\ Returns\ a\ breadth\ first\ iterator\ starting\ with\ the\ given\ vertex.\ \r\n\ \r\n\ @param\ startVertex\ the\ starting\ vertex\r\n\ @return\ a\ breadth\ first\ iterator\ beginning\ at\ the\ given\ vertex\r\n
comment6.params=startVertex
comment6.target=java.util.Iterator\ iteratorDFS(java.lang.Object)
comment6.text=\ \r\n\ Returns\ a\ depth\ first\ iterator\ starting\ with\ the\ given\ vertex.\ \r\n\r\n\ @param\ startVertex\ the\ starting\ vertex\r\n\ @return\ a\ depth\ first\ iterator\ starting\ at\ the\ given\ vertex\r\n
comment7.params=startVertex\ targetVertex
comment7.target=java.util.Iterator\ iteratorShortestPath(java.lang.Object,\ java.lang.Object)
comment7.text=\ \r\n\ Returns\ an\ iterator\ that\ contains\ the\ shortest\ path\ between\r\n\ the\ two\ vertices.\ \r\n\r\n\ @param\ startVertex\ the\ starting\ vertex\r\n\ @param\ targetVertex\ the\ ending\ vertex\r\n\ @return\ an\ iterator\ that\ contains\ the\ shortest\ path\r\n\ \ \ \ \ \ \ \ \ between\ the\ two\ vertices\r\n
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\ \r\n\ Returns\ true\ if\ this\ graph\ is\ empty,\ false\ otherwise.\ \r\n\r\n\ @return\ true\ if\ this\ graph\ is\ empty\r\n
comment9.params=
comment9.target=boolean\ isConnected()
comment9.text=\ \r\n\ Returns\ true\ if\ this\ graph\ is\ connected,\ false\ otherwise.\ \r\n\r\n\ @return\ true\ if\ this\ graph\ is\ connected\r\n
numComments=12
